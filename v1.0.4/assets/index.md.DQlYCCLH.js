import{_ as e,c as a,o as t,a6 as r}from"./chunks/framework.IIyXaTQX.js";const b=JSON.parse('{"title":"TruncatedMVN","description":"","frontmatter":{"layout":"home","hero":{"name":"TruncatedMVN.jl","tagline":"Truncated multivariate normal distribution with exact sampling"}},"headers":[],"relativePath":"index.md","filePath":"index.md","lastUpdated":1758727058000}'),n={name:"index.md"},i=r('<h1 id="TruncatedMVN" tabindex="-1">TruncatedMVN <a class="header-anchor" href="#TruncatedMVN" aria-label="Permalink to &quot;TruncatedMVN {#TruncatedMVN}&quot;">​</a></h1><p>Julia reimplementation of a truncated multivariate normal distribution with perfect sampling.</p><p>Distribution and sampling method by [<a href="/TruncatedMVN.jl/v1.0.4/index#Botev_2017">1</a>].</p><p>Code based on MATLAB implementation by Zdravko Botev and Python implementation by Paul Brunzema. These may be found here: <a href="https://mathworks.com/matlabcentral/fileexchange/53792-truncated-multivariate-normal-generator" target="_blank" rel="noreferrer">MATLAB by Botev</a>, <a href="https://github.com/brunzema/truncated-mvn-sampler" target="_blank" rel="noreferrer">Python by Brunzema</a></p><p>Exports 1 struct + its constructor and 1 function:</p><ul><li><p><a href="/TruncatedMVN.jl/v1.0.4/public#TruncatedMVN.TruncatedMVNormal"><code>TruncatedMVN.TruncatedMVNormal</code></a>: Struct and constructor for initializing the distribution.</p></li><li><p><a href="/TruncatedMVN.jl/v1.0.4/public#TruncatedMVN.sample"><code>TruncatedMVN.sample</code></a>: Exact sampling from the distribution.</p></li></ul><p>Documentation for these can be found in the <a href="/TruncatedMVN.jl/v1.0.4/public#Public-API">Public API</a> section.</p><h1 id="References" tabindex="-1">References <a class="header-anchor" href="#References" aria-label="Permalink to &quot;References {#References}&quot;">​</a></h1><hr><h1 id="bibliography" tabindex="-1">Bibliography <a class="header-anchor" href="#bibliography" aria-label="Permalink to &quot;Bibliography&quot;">​</a></h1><ol><li>Z. I. Botev. <a href="http://dx.doi.org/10.1111/rssb.12162" target="_blank" rel="noreferrer"><em>The normal law under linear restrictions: Simulation and estimation via minimax tilting</em></a>. <a href="https://doi.org/10.1111/rssb.12162" target="_blank" rel="noreferrer">Journal of the Royal Statistical Society. Series B, Statistical methodology <strong>79</strong>, 125–148</a> (2017).</li></ol>',11),o=[i];function l(c,d,s,u,h,m){return t(),a("div",null,o)}const f=e(n,[["render",l]]);export{b as __pageData,f as default};
