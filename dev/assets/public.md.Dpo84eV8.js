import{_ as r,C as p,c as d,o,j as i,a as e,aA as l,G as t,w as n}from"./chunks/framework.BkqxDdPC.js";const A=JSON.parse('{"title":"Public API","description":"","frontmatter":{},"headers":[],"relativePath":"public.md","filePath":"public.md","lastUpdated":null}'),h={name:"public.md"},k={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""};function g(b,s,T,E,y,m){const a=p("Badge");return o(),d("div",null,[s[12]||(s[12]=i("h1",{id:"Public-API",tabindex:"-1"},[e("Public API "),i("a",{class:"header-anchor",href:"#Public-API","aria-label":'Permalink to "Public API {#Public-API}"'},"â€‹")],-1)),s[13]||(s[13]=i("p",null,"Documentation for the public API of TruncatedMVN.jl.",-1)),i("details",k,[i("summary",null,[s[0]||(s[0]=i("a",{id:"TruncatedMVN.TruncatedMVNormal",href:"#TruncatedMVN.TruncatedMVNormal"},[i("span",{class:"jlbinding"},"TruncatedMVN.TruncatedMVNormal")],-1)),s[1]||(s[1]=e()),t(a,{type:"info",class:"jlObjectType jlType",text:"Type"})]),s[3]||(s[3]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">TruncatedMVNormal{S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,U</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,V</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,P</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:Integer}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Truncated multivariate normal distribution with minimax tilting-based sampling.</p>',2)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[2]||(s[2]=[i("a",{href:"https://github.com/Eliassj/TruncatedMVN.jl/blob/dd4d31026d10ec8f659809d314a061f49e38810e/src/TruncatedMVN.jl#L20-L25",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",c,[i("summary",null,[s[4]||(s[4]=i("a",{id:"TruncatedMVN.TruncatedMVNormal-Union{Tuple{S}, Tuple{T}, Tuple{T, S, T, T}} where {T<:AbstractVector{<:AbstractFloat}, S<:AbstractArray{<:AbstractFloat}}",href:"#TruncatedMVN.TruncatedMVNormal-Union{Tuple{S}, Tuple{T}, Tuple{T, S, T, T}} where {T<:AbstractVector{<:AbstractFloat}, S<:AbstractArray{<:AbstractFloat}}"},[i("span",{class:"jlbinding"},"TruncatedMVN.TruncatedMVNormal")],-1)),s[5]||(s[5]=e()),t(a,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),s[7]||(s[7]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> TruncatedMVNormal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mu</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, cov</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">S</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, lb</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, ub</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractVector{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,S</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:AbstractFloat}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Inner constructor of the <a href="/TruncatedMVN.jl/dev/public#TruncatedMVN.TruncatedMVNormal"><code>TruncatedMVN.TruncatedMVNormal</code></a> distribution.</p><p>Generates a truncated multivariate normal distribution which may be accurately sampled from using <a href="/TruncatedMVN.jl/dev/public#TruncatedMVN.sample"><code>TruncatedMVN.sample</code></a>.</p><p><strong>Arguments</strong></p><ul><li><p><code>mu::T</code>: D-dimensional vector of means.</p></li><li><p><code>cov::S</code>: DxD-dimensional covariance matrix.</p></li><li><p><code>lb::T</code>: D-dimensional vector of lower bounds.</p></li><li><p><code>ub::T</code>: D-dimensional vector of upper bounds.</p></li></ul><p>Bounds may be <code>-Inf</code>/<code>Inf</code>.</p>',6)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[6]||(s[6]=[i("a",{href:"https://github.com/Eliassj/TruncatedMVN.jl/blob/dd4d31026d10ec8f659809d314a061f49e38810e/src/TruncatedMVN.jl#L42-L58",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})]),i("details",u,[i("summary",null,[s[8]||(s[8]=i("a",{id:"TruncatedMVN.sample",href:"#TruncatedMVN.sample"},[i("span",{class:"jlbinding"},"TruncatedMVN.sample")],-1)),s[9]||(s[9]=e()),t(a,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),s[11]||(s[11]=l('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sample</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TruncatedMVNormal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, max_iter</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Integer</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Sample <code>n</code> samples from the distribution <code>d</code>.</p><p>Returns an D x n <code>Matrix</code> of samples where D is the dimension of the distribution <code>d</code>.</p>',3)),t(a,{type:"info",class:"source-link",text:"source"},{default:n(()=>[...s[10]||(s[10]=[i("a",{href:"https://github.com/Eliassj/TruncatedMVN.jl/blob/dd4d31026d10ec8f659809d314a061f49e38810e/src/TruncatedMVN.jl#L87-L93",target:"_blank",rel:"noreferrer"},"source",-1)])]),_:1})])])}const C=r(h,[["render",g]]);export{A as __pageData,C as default};
